name: Build ECO files (no-PR)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 3 * * 1"  # weekly, Mon 03:00 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      # --- pgn-extract flavor (canonical) ---
      - name: Install pgn-extract and copy its eco.pgn
        run: |
          sudo apt-get update
          sudo apt-get install -y pgn-extract
          mkdir -p data
          cp /usr/share/pgn-extract/eco.pgn data/eco-pgn-extract.pgn

      # --- Lichess flavor (from TSVs) ---
      - name: Checkout lichess chess-openings
        uses: actions/checkout@v4
        with:
          repository: lichess-org/chess-openings
          path: chess-openings

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Generate eco-lichess.pgn from TSVs
        run: |
          python - <<'PY'
          import csv, pathlib

          src = pathlib.Path('chess-openings')
          out = pathlib.Path('data/eco-lichess.pgn')
          files = [src / f"{ch}.tsv" for ch in "abcde"]

          rows = []
          for f in files:
            with f.open(newline='', encoding='utf-8') as fh:
              r = csv.DictReader(fh, delimiter='\t')
              for row in r:
                eco = (row.get('eco') or '').strip()
                name = (row.get('name') or '').strip()
                pgn  = (row.get('pgn') or '').strip()
                if eco and name and pgn:
                  rows.append((eco, name, pgn))

          rows.sort(key=lambda x: (x[0], x[1], x[2]))

          def split_name(n):
            return n.split(': ', 1) + [''] if ': ' in n else [n, '']

          out.parent.mkdir(parents=True, exist_ok=True)
          with out.open('w', encoding='utf-8', newline='\n') as w:
            for eco, name, line in rows:
              opening, variation = split_name(name)[:2]
              w.write('[Event "ECO"]\n')
              w.write('[Site "lichess-org/chess-openings"]\n')
              w.write('[Date "????.??.??"]\n')
              w.write('[Round "?"]\n')
              w.write('[White "?"]\n')
              w.write('[Black "?"]\n')
              w.write('[Result "*"]\n')
              w.write(f'[ECO "{eco}"]\n')
              w.write(f'[Opening "{opening}"]\n')
              if variation:
                w.write(f'[Variation "{variation}"]\n')
              w.write('\n')
              moves = line.strip()
              if not moves.endswith(('*','1-0','0-1','1/2-1/2')):
                moves += ' *'
              w.write(moves + '\n\n')
          print(f"Wrote {out}")
          PY

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: eco-files
          path: |
            data/eco-pgn-extract.pgn
            data/eco-lichess.pgn

      # --- Commit to a new branch; you open the PR manually ---
      - name: Commit to update branch if changed
        run: |
          set -euo pipefail
          if git diff --quiet -- data/eco-pgn-extract.pgn data/eco-lichess.pgn; then
            echo "No changes to commit."
            exit 0
          fi

          BRANCH="update-eco-$(date -u +%Y%m%d)"
          git fetch origin
          if git show-ref --verify --quiet "refs/heads/$BRANCH"; then
            git switch "$BRANCH"
          else
            git switch -c "$BRANCH"
          fi

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/eco-pgn-extract.pgn data/eco-lichess.pgn
          git commit -m "Update ECO files"
          git push -u origin "$BRANCH"

          echo "Pushed changes to branch: $BRANCH"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "### Next step" >> "$GITHUB_STEP_SUMMARY"
          echo "- Open a PR from \`$BRANCH\` into your default branch." >> "$GITHUB_STEP_SUMMARY"
